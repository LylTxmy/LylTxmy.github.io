<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-11T12:37:45.091Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Cancrie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MSF浏览器自动攻击</title>
    <link href="http://yoursite.com/2019/04/11/MSF%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E6%94%BB%E5%87%BB-1/"/>
    <id>http://yoursite.com/2019/04/11/MSF浏览器自动攻击-1/</id>
    <published>2019-04-11T12:37:45.000Z</published>
    <updated>2019-04-11T12:37:45.091Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ubuntu_create_vpn服务器</title>
    <link href="http://yoursite.com/2019/04/06/ubuntu-create-vpn%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2019/04/06/ubuntu-create-vpn服务器/</id>
    <published>2019-04-06T07:39:38.000Z</published>
    <updated>2019-04-06T12:01:52.553Z</updated>
    
    <content type="html"><![CDATA[<p>在Ubuntu上搭建VPN方法很多，常见的三种方法分别是PPTP,L2TP/IPsec，OpenVPN。其中PPTP是配置最简单的方式，本次配置使用PPTP方式。</p><h1 id="1-安装pptpd"><a href="#1-安装pptpd" class="headerlink" title="1.安装pptpd"></a>1.安装pptpd</h1><p>在Ubuntu服务上建立pptp server，需要安装包pptpd，用apt-get方式安装。</p><p><code>sudo apt-get install pptpd</code></p><h1 id="2-配置文件-etc-pptpd-conf"><a href="#2-配置文件-etc-pptpd-conf" class="headerlink" title="2.配置文件/etc/pptpd.conf"></a>2.配置文件/etc/pptpd.conf</h1><p><code>sudo vi /etc/pptpd.conf</code></p><p>在文件末尾找到localip和remoteio两个参数，去掉注释并修改。localip是VPN连通后服务器的ip地址，remoteip是客户端可以分配的地址</p><p><code>localip 192.168.0.1</code></p><p><code>remoteip 192.168.0.234-238,192.168.0.245</code></p><h1 id="3-配置文件-etc-ppp-pptp-options"><a href="#3-配置文件-etc-ppp-pptp-options" class="headerlink" title="3.配置文件/etc/ppp/pptp-options"></a>3.配置文件/etc/ppp/pptp-options</h1><p><code>sudo vi /etc/ppp/pptp-options</code></p><p>修改ms-dns选项，为 VPN 客户端指派 DNS 服务器地址：</p><p><img src="/2019/04/06/ubuntu-create-vpn服务器/1.png" alt="示例图片" title="例"> </p><h1 id="4-设置vpn账户"><a href="#4-设置vpn账户" class="headerlink" title="4.设置vpn账户"></a>4.设置vpn账户</h1><p>修改/etc/ppp/chap-secrets文件，存放VPN的用户名和密码，根据实际情况填写即可。第一列是用户名，第二列是服务器名，第三列是密码，第四列是IP限制</p><p><code>sudo vi /etc/ppp/chap-secrets</code></p><p><img src="/2019/04/06/ubuntu-create-vpn服务器/2.png" alt="示例图片" title="例"> </p><p>此时连接VPN的客户端除了访问该服务器的资源外，其余内外和互联网的内容均无法访问。</p><h1 id="5-开启内核IP转发"><a href="#5-开启内核IP转发" class="headerlink" title="5.开启内核IP转发"></a>5.开启内核IP转发</h1><p><code>sudo vi etc/sysctl.conf</code></p><p>取消net.ipv4.ip_forward=1这一行的注释，再执行</p><p><code>sudo sysctl -p</code></p><p>使配置文件生效</p><p><img src="/2019/04/06/ubuntu-create-vpn服务器/3.png" alt="示例图片" title="例">    </p><h1 id="6-安装iptables，实现请求的NAT转发"><a href="#6-安装iptables，实现请求的NAT转发" class="headerlink" title="6.安装iptables，实现请求的NAT转发"></a>6.安装iptables，实现请求的NAT转发</h1><h5 id="1-安装iptables"><a href="#1-安装iptables" class="headerlink" title="1.安装iptables"></a>1.安装iptables</h5><p><code>sudo apt-get install iptables</code></p><h5 id="2-允许gre协议以及1723、47端口"><a href="#2-允许gre协议以及1723、47端口" class="headerlink" title="2.允许gre协议以及1723、47端口"></a>2.允许gre协议以及1723、47端口</h5><p><code>sudo iptables -A INPUT -p gre -j ACCEPT</code></p><p><code>sudo iptables -A INPUT -p tcp --dport 1723 -j ACCEPT</code> </p><p><code>sudo iptables -A INPUT -p tcp --dport 47 -j ACCEPT</code></p><h5 id="3-开启NAT转发"><a href="#3-开启NAT转发" class="headerlink" title="3.开启NAT转发"></a>3.开启NAT转发</h5><p><code>sudo iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o ens33 -j MASQUERADE</code></p><h5 id="4-保存"><a href="#4-保存" class="headerlink" title="4.保存"></a>4.保存</h5><p>Iptables的规则会在下次重启时被清除，把它保存下来，用iptables-save命令：</p><p> <code>sudo iptables-save &gt; /etc/iptables-rules</code></p><h5 id="5-修改配置"><a href="#5-修改配置" class="headerlink" title="5.修改配置"></a>5.修改配置</h5><p>修改/etc/network/interfaces文件，在末尾添加</p><p> <code>pre-up iptables-restore &lt;/etc/iptables-rules</code></p><p>这样当网卡ens33被加载时就会自动载入我们预先用iptables-save保存的设置。</p><h1 id="7-收工"><a href="#7-收工" class="headerlink" title="7.收工"></a>7.收工</h1><p>重启pptpd服务，搭建完成，在其他虚拟机上实验一下。</p><p><img src="/2019/04/06/ubuntu-create-vpn服务器/4.png" alt="示例图片" title="例"></p><p>可以上网。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Ubuntu上搭建VPN方法很多，常见的三种方法分别是PPTP,L2TP/IPsec，OpenVPN。其中PPTP是配置最简单的方式，本次配置使用PPTP方式。&lt;/p&gt;
&lt;h1 id=&quot;1-安装pptpd&quot;&gt;&lt;a href=&quot;#1-安装pptpd&quot; class=&quot;head
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>win2008_create_vpn</title>
    <link href="http://yoursite.com/2019/04/02/win2008-create-vpn/"/>
    <id>http://yoursite.com/2019/04/02/win2008-create-vpn/</id>
    <published>2019-04-02T13:44:35.000Z</published>
    <updated>2019-04-02T13:59:15.455Z</updated>
    
    <content type="html"><![CDATA[<p>1.添加服务器角色：网络策略和访问服务</p><p><img src="/2019/04/02/win2008-create-vpn/1.png" alt="示例图片" title="例"></p><p>2.配置路由与远程访问</p><p><img src="/2019/04/02/win2008-create-vpn/2.png" alt="示例图片" title="例"></p><p>3.右键属性，配置并启动路由与远程访问</p><p><img src="/2019/04/02/win2008-create-vpn/3.png" alt="示例图片" title="例"></p><p>4.自定义</p><p><img src="/2019/04/02/win2008-create-vpn/4.png" alt="示例图片" title="例"></p><p>5.全选</p><p><img src="/2019/04/02/win2008-create-vpn/5.png" alt="示例图片" title="例"></p><p>6.完成添加</p><p><img src="/2019/04/02/win2008-create-vpn/6.png" alt="示例图片" title="例"></p><p>7.配置nat接口，选择ipv4下nat新增接口</p><p><img src="/2019/04/02/win2008-create-vpn/7.png" alt="示例图片" title="例"></p><p>8.右键新建接口，选择本地连接</p><p><img src="/2019/04/02/win2008-create-vpn/8.png" alt="示例图片" title="例"></p><p>9.右击“路由和远程访问”，选择属性，点击IPv4。<img src="/2019/04/02/win2008-create-vpn/9.png" alt="示例图片" title="例"></p><p>10.可选择静态地址池，选择添加IP地址用于分配给连接VPN的用户IP地址。<img src="/2019/04/02/win2008-create-vpn/10.png" alt="示例图片" title="例"></p><p>11.添加一个用户vpn<img src="/2019/04/02/win2008-create-vpn/11.png" alt="示例图片" title="例"></p><p>12.完成win2008上的VPN服务器搭建</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.添加服务器角色：网络策略和访问服务&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/04/02/win2008-create-vpn/1.png&quot; alt=&quot;示例图片&quot; title=&quot;例&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.配置路由与远程访问&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/201
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/31/shijing/"/>
    <id>http://yoursite.com/2019/03/31/shijing/</id>
    <published>2019-03-31T12:50:44.686Z</published>
    <updated>2019-03-31T12:59:40.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="诗境"><a href="#诗境" class="headerlink" title="诗境"></a>诗境</h1><p>在一个金色的鱼儿群聚的海岸</p><p>我们把篝火点燃了</p><p>所有的故事都在这个夜晚</p><p>听见了</p><p>年轻的想象为我建筑镜之国</p><p>把我引到月亮身边</p><p>在此曾目睹</p><p>驯养神龙的少年</p><p>而所有的天空都唉声叹气</p><p>融化的雪水</p><p>从母亲手指的缝隙中</p><p>滴在额头</p><p>我想你在海岸线旁使用的语调</p><p>是宇宙中蓝星的季节</p><p>轻轻地夹在日记的一叶</p><p>善于遗忘的色彩</p><p>为此采撷鳞翅的昆虫</p><p>你如此轻柔抚摸它们的触角</p><p>是月亮女神</p><p>永睡的恩底弥翁的吻</p><p>温暖的太阳初映照山泉的时候</p><p>就可以停下摇铃</p><p>和唱诵</p><p>夜莺在睡梦中暗暗啜泣</p><p>如果在那栈桥上你还要挽留</p><p>我唱起天使曾唱的歌</p><p>你把我拥抱</p><p>徙游的鸥燕怎么能明白</p><p>黑色中柔弱枯萎的一朵</p><p>与我仔细用意一把折断的雨伞</p><p>收拾在宝箱里</p><p>时间那好似艳羡口吻的情书</p><p>那是出于惊喜而赠送的一朵</p><p>与绵绵的白雪</p><p>一起翻身上马</p><p>带有青春的肃杀与冷痛</p><p>绝情的缔造者真是迟钝</p><p>凡是在高原上居住的神灵都显得</p><p>空洞而自哀</p><p>在祭典火红的灯光下</p><p>实现残忍的决心</p><p>在于为苍白的纸卷书画颜色</p><p>因此我只有一杆琴</p><p>山河万物也不尽然舞蹈</p><p>在森林中睡着了</p><p>像是个怀念妻子的老人</p><p>你永远不能相信我关于七彩的魔法</p><p>只要夜晚永不落幕</p><p>所以老虎收藏我的骸骨</p><p>那珍贵的羽翼一双</p><p>出于可爱的目的</p><p>没有人再会打扰这次的梦境</p><p>只要我再歌唱起神话</p><p>那自天穹滚滚而降的训谕</p><p>又会在废墟之中塔的影轮的影</p><p>重生</p><p>请给我我的爱人请不要走</p><p>你占我诗一行</p><p>无论是海波还是天空</p><p>都能飘过</p><p>就这样追寻着温柔的香味</p><p>我等待着你的发现</p><p>在这颗星球的中心我像树一样生长</p><p>飞行思索连接</p><p>牵上我的手呀</p><p>带我穿越那个绝望的春天</p><p>在无尽欢喜之池中逐渐窒息</p><p>正如山海中火把游行</p><p>香折冷梅一枝</p><p>我把诗记在月亮的殿堂</p><p>你们会拿着蜡烛来祭奠</p><p>每一滴火焰都窃窃私语</p><p>在银河的中央</p><p>最后睁开黑色的瞳眸</p><p>最后停下爱的想象</p><p>拥抱着这个宇宙全部的辉耀</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;诗境&quot;&gt;&lt;a href=&quot;#诗境&quot; class=&quot;headerlink&quot; title=&quot;诗境&quot;&gt;&lt;/a&gt;诗境&lt;/h1&gt;&lt;p&gt;在一个金色的鱼儿群聚的海岸&lt;/p&gt;
&lt;p&gt;我们把篝火点燃了&lt;/p&gt;
&lt;p&gt;所有的故事都在这个夜晚&lt;/p&gt;
&lt;p&gt;听见了&lt;/p&gt;
&lt;p&gt;年轻的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webkali</title>
    <link href="http://yoursite.com/2019/03/22/webkali/"/>
    <id>http://yoursite.com/2019/03/22/webkali/</id>
    <published>2019-03-22T01:09:09.000Z</published>
    <updated>2019-03-22T01:15:59.110Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-kali中安装shellinabox"><a href="#一-kali中安装shellinabox" class="headerlink" title="一. kali中安装shellinabox"></a>一. kali中安装shellinabox</h1><p>准备：shellinabox、ngrok</p><p>apt-get install shellinabox</p><p><img src="/2019/03/22/webkali/1.png" alt="示例图片" title="例"></p><h1 id="二-创建kali账号开启shellinabox"><a href="#二-创建kali账号开启shellinabox" class="headerlink" title="二. 创建kali账号开启shellinabox"></a>二. 创建kali账号开启shellinabox</h1><p>useradd ghacker</p><p>passwd ghacker</p><p><img src="/2019/03/22/webkali/2.png" alt="示例图片" title="例"></p><p>开启shellinabox：</p><p>shellinaboxd -b -t</p><p><img src="/2019/03/22/webkali/3.png" alt="示例图片" title="例"></p><p>-b 后台启动</p><p>-t http方式启动</p><p>可以在kali系统中用通过 <a href="http://ip:4200访问web版kali" target="_blank" rel="noopener">http://ip:4200访问web版kali</a></p><p><img src="/2019/03/22/webkali/4.png" alt="示例图片" title="例"></p><p>无论哪种安装方式，安装后可编辑/etc/sysconfig/shellinaboxd配置文件来更改端口，默认是4200端口</p><h1 id="三-外网映射"><a href="#三-外网映射" class="headerlink" title="三.  外网映射"></a>三.  外网映射</h1><p>去ngrok的官网，隧道开通，香港免费的。协议选http，隧道名称跟前置域名自定义，本地端口写kali服务器的端口，ip写kali的ip，端口就写ssh web的端口4200，http验证用户名跟密码选填，最后直接点确定添加。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一-kali中安装shellinabox&quot;&gt;&lt;a href=&quot;#一-kali中安装shellinabox&quot; class=&quot;headerlink&quot; title=&quot;一. kali中安装shellinabox&quot;&gt;&lt;/a&gt;一. kali中安装shellinabox&lt;/h1
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>blog_create</title>
    <link href="http://yoursite.com/2019/03/17/blog-create/"/>
    <id>http://yoursite.com/2019/03/17/blog-create/</id>
    <published>2019-03-17T13:13:26.000Z</published>
    <updated>2019-03-18T01:16:56.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-使用工具"><a href="#一-使用工具" class="headerlink" title="一.使用工具"></a>一.使用工具</h1><p>Git+Hexo+Nodejs+GitHub账号+买来的域名</p><h4 id="ps：配置ssh"><a href="#ps：配置ssh" class="headerlink" title="ps：配置ssh"></a>ps：配置ssh</h4><p>+本地生成公钥私钥</p><p><code>$ssh-keygen -t rsa -C &quot;你的邮件地址&quot;</code></p><p>+添加公钥到 Github</p><p>1.根据上一步的提示，找到公钥文件（默认为id_rsa.pub），用记事本打开，全选并复制。<br>2.登录 Github，右上角 头像 -&gt; Settings —&gt; SSH keys —&gt; Add SSH key。把公钥粘贴到key中，填好title并点击 Add key。</p><p>3.git bash中输入命令$ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>，选yes，等待片刻可看到成功提示</p><h1 id="二-安装和搭建"><a href="#二-安装和搭建" class="headerlink" title="二.安装和搭建"></a>二.安装和搭建</h1><p>1.git：官网安装，注册GitHub，打开 Git Bash,接下来的命令均在Git Bash中执行</p><p>ps：最好改个镜像： ‘npm config set registry <a href="http://registry.npm.taobao.org&#39;" target="_blank" rel="noopener">http://registry.npm.taobao.org&#39;</a></p><p>2.安装node.js</p><p>3.hexo：在安装hexo的文件夹中打开Git，输入</p><p> <code>$npm install -g hexo</code></p><p>4.安装依赖包</p><p><code>$npm install</code></p><p>5.新建Github的仓库 仓库名必须为你的Github名.github.io，不然不能使用Github Pages服务</p><p>6.输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>7.打开浏览器输入localhost:4000查看：</p><p><img src="/2019/03/17/blog-create/1.png" alt="示例图片" title="例"><br>这个样子就说明成功了，这个就是hexo默认的博客主题。</p><h2 id="三-将本地博客上传到github"><a href="#三-将本地博客上传到github" class="headerlink" title="三.将本地博客上传到github"></a>三.将本地博客上传到github</h2><p>1.修改hexo站点的配置文件</p><p><img src="/2019/03/17/blog-create/2.png" alt="示例图片" title="例"></p><p>2.部署一下</p><p><code>npm install hexo-deployer-git --save</code></p><p>装个插件</p><p><code>hexo d</code></p><p>插件的命令</p><p>3.访问网站：<a href="https://LylTxmy.github.io(当时没有截图，假装有好了)" target="_blank" rel="noopener">https://LylTxmy.github.io(当时没有截图，假装有好了)</a></p><h1 id="四-域名绑定"><a href="#四-域名绑定" class="headerlink" title="四.域名绑定"></a>四.域名绑定</h1><p>1.去阿里云买了个一年几块的top域名</p><p>2.实名认证+备案</p><p>3.添加两个解析：</p><p>记录类型：CNAME</p><p>主机类型：www</p><p>记录值：用户名.github.io</p><p>记录类型：A</p><p>主机类型：@</p><p>记录值：填上用ping 用户名.github.io 返回的IP</p><p>4.</p><p>然后到你博客根目录/source 目录下创建一个新文件CNAME<br>在里面写上你刚刚配置的路径，我的是<a href="http://www.cancrie.top，就直接在CNAME文件中写上这个地址" target="_blank" rel="noopener">www.cancrie.top，就直接在CNAME文件中写上这个地址</a></p><p>5.</p><p>在 github 上面，打开 <a href="http://username.github.io/" target="_blank" rel="noopener">username.github.io</a> 项目的（Settings）设置，然后在 GitHub Pages<code>的</code>Custom domain设置里填上购买的域名。</p><p>6.</p><p>然后执行以下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>让后访问你自己的地址就可以跳转到博客了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一-使用工具&quot;&gt;&lt;a href=&quot;#一-使用工具&quot; class=&quot;headerlink&quot; title=&quot;一.使用工具&quot;&gt;&lt;/a&gt;一.使用工具&lt;/h1&gt;&lt;p&gt;Git+Hexo+Nodejs+GitHub账号+买来的域名&lt;/p&gt;
&lt;h4 id=&quot;ps：配置ssh&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
